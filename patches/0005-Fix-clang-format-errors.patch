From 2fb097c2f25f215bdb6a906a12aa6468d5bfc5c9 Mon Sep 17 00:00:00 2001
From: Zlika <zlika_ese@hotmail.com>
Date: Wed, 16 Jun 2021 15:21:46 +0200
Subject: [PATCH 05/73] Fix clang-format errors

Signed-off-by: Zlika <zlika_ese@hotmail.com>
---
 kernels/volk/volk_32f_index_min_16u.h  |  5 +++--
 kernels/volk/volk_32f_index_min_32u.h  | 10 ++++++----
 kernels/volk/volk_32fc_index_min_16u.h |  8 ++++----
 kernels/volk/volk_32fc_index_min_32u.h |  8 ++++----
 4 files changed, 17 insertions(+), 14 deletions(-)

diff --git a/kernels/volk/volk_32f_index_min_16u.h b/kernels/volk/volk_32f_index_min_16u.h
index d8ffcc7..115835e 100644
--- a/kernels/volk/volk_32f_index_min_16u.h
+++ b/kernels/volk/volk_32f_index_min_16u.h
@@ -140,8 +140,9 @@ volk_32f_index_min_16u_a_avx(uint16_t* target, const float* source, uint32_t num
 #ifdef LV_HAVE_SSE4_1
 #include <smmintrin.h>
 
-static inline void
-volk_32f_index_min_16u_a_sse4_1(uint16_t* target, const float* source, uint32_t num_points)
+static inline void volk_32f_index_min_16u_a_sse4_1(uint16_t* target,
+                                                   const float* source,
+                                                   uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
     const uint32_t quarterPoints = num_points / 4;
diff --git a/kernels/volk/volk_32f_index_min_32u.h b/kernels/volk/volk_32f_index_min_32u.h
index 23c2d17..a68ba9c 100644
--- a/kernels/volk/volk_32f_index_min_32u.h
+++ b/kernels/volk/volk_32f_index_min_32u.h
@@ -72,8 +72,9 @@
 #ifdef LV_HAVE_SSE4_1
 #include <smmintrin.h>
 
-static inline void
-volk_32f_index_min_32u_a_sse4_1(uint32_t* target, const float* source, uint32_t num_points)
+static inline void volk_32f_index_min_32u_a_sse4_1(uint32_t* target,
+                                                   const float* source,
+                                                   uint32_t num_points)
 {
     if (num_points > 0) {
         const uint32_t quarterPoints = num_points / 4;
@@ -421,8 +422,9 @@ volk_32f_index_min_32u_u_avx(uint32_t* target, const float* source, uint32_t num
 #ifdef LV_HAVE_SSE4_1
 #include <smmintrin.h>
 
-static inline void
-volk_32f_index_min_32u_u_sse4_1(uint32_t* target, const float* source, uint32_t num_points)
+static inline void volk_32f_index_min_32u_u_sse4_1(uint32_t* target,
+                                                   const float* source,
+                                                   uint32_t num_points)
 {
     if (num_points > 0) {
         const uint32_t quarterPoints = num_points / 4;
diff --git a/kernels/volk/volk_32fc_index_min_16u.h b/kernels/volk/volk_32fc_index_min_16u.h
index bf7f6e3..8f40730 100644
--- a/kernels/volk/volk_32fc_index_min_16u.h
+++ b/kernels/volk/volk_32fc_index_min_16u.h
@@ -284,8 +284,8 @@ volk_32fc_index_min_16u_a_sse3(uint16_t* target, lv_32fc_t* source, uint32_t num
     }
 
     if (num_bytes >> 3 & 1) {
-        sq_dist =
-            lv_creal(source[0]) * lv_creal(source[0]) + lv_cimag(source[0]) * lv_cimag(source[0]);
+        sq_dist = lv_creal(source[0]) * lv_creal(source[0]) +
+                  lv_cimag(source[0]) * lv_cimag(source[0]);
 
         xmm2 = _mm_load1_ps(&sq_dist);
 
@@ -331,8 +331,8 @@ volk_32fc_index_min_16u_generic(uint16_t* target, lv_32fc_t* source, uint32_t nu
     uint16_t index = 0;
 
     for (uint32_t i = 0; i<num_bytes>> 3; ++i) {
-        sq_dist =
-            lv_creal(source[i]) * lv_creal(source[i]) + lv_cimag(source[i]) * lv_cimag(source[i]);
+        sq_dist = lv_creal(source[i]) * lv_creal(source[i]) +
+                  lv_cimag(source[i]) * lv_cimag(source[i]);
 
         if (sq_dist < min) {
             index = i;
diff --git a/kernels/volk/volk_32fc_index_min_32u.h b/kernels/volk/volk_32fc_index_min_32u.h
index 0539dd5..efa33ee 100644
--- a/kernels/volk/volk_32fc_index_min_32u.h
+++ b/kernels/volk/volk_32fc_index_min_32u.h
@@ -272,8 +272,8 @@ volk_32fc_index_min_32u_a_sse3(uint32_t* target, lv_32fc_t* source, uint32_t num
     }
 
     if (num_bytes >> 3 & 1) {
-        sq_dist =
-            lv_creal(source[0]) * lv_creal(source[0]) + lv_cimag(source[0]) * lv_cimag(source[0]);
+        sq_dist = lv_creal(source[0]) * lv_creal(source[0]) +
+                  lv_cimag(source[0]) * lv_cimag(source[0]);
 
         xmm2 = _mm_load1_ps(&sq_dist);
 
@@ -318,8 +318,8 @@ volk_32fc_index_min_32u_generic(uint32_t* target, lv_32fc_t* source, uint32_t nu
     uint32_t index = 0;
 
     for (uint32_t i = 0; i<num_bytes>> 3; ++i) {
-        sq_dist =
-            lv_creal(source[i]) * lv_creal(source[i]) + lv_cimag(source[i]) * lv_cimag(source[i]);
+        sq_dist = lv_creal(source[i]) * lv_creal(source[i]) +
+                  lv_cimag(source[i]) * lv_cimag(source[i]);
 
         if (sq_dist < min) {
             index = i;
-- 
2.30.2


From 9039b0c9147a28a81b1e0ca31cf0d83b931e64d5 Mon Sep 17 00:00:00 2001
From: Clayton Smith <argilo@gmail.com>
Date: Thu, 22 Aug 2019 23:07:14 -0400
Subject: [PATCH 2/3] Fail tests if non-numbers are detected

---
 lib/qa_utils.cc | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/lib/qa_utils.cc b/lib/qa_utils.cc
index 872b3e2..e20dafc 100644
--- a/lib/qa_utils.cc
+++ b/lib/qa_utils.cc
@@ -302,6 +302,14 @@ bool ccompare(t *in1, t *in2, unsigned int vlen, float tol, bool absolute_mode)
     bool fail = false;
     int print_max_errs = 10;
     for(unsigned int i=0; i<2*vlen; i+=2) {
+        if (std::isnan(in1[i]) || std::isnan(in1[i+1]) || std::isnan(in2[i]) || std::isnan(in2[i+1])
+                || std::isinf(in1[i]) || std::isinf(in1[i+1]) || std::isinf(in2[i]) || std::isinf(in2[i+1])) {
+            fail=true;
+            if(print_max_errs-- > 0) {
+                std::cout << "offset " << i/2 << " in1: " << in1[i] << " + " << in1[i+1] << "j  in2: " << in2[i] << " + " << in2[i+1] << "j";
+                std::cout << " tolerance was: " << tol << std::endl;
+            }
+        }
         t diff[2] = { in1[i] - in2[i], in1[i+1] - in2[i+1] };
         t err  = std::sqrt(diff[0] * diff[0] + diff[1] * diff[1]);
         t norm = std::sqrt(in1[i] * in1[i] + in1[i+1] * in1[i+1]);
-- 
2.20.1


From 924b3fffbb9fa6218499a1fa0378262890c3c76d Mon Sep 17 00:00:00 2001
From: Zlika <zlika_ese@hotmail.com>
Date: Mon, 5 Jul 2021 14:55:30 +0200
Subject: [PATCH 11/73] Code cleanup

Signed-off-by: Zlika <zlika_ese@hotmail.com>
---
 kernels/volk/volk_32fc_index_min_16u.h | 12 ++++++------
 kernels/volk/volk_32fc_index_min_32u.h | 14 +++++++-------
 2 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/kernels/volk/volk_32fc_index_min_16u.h b/kernels/volk/volk_32fc_index_min_16u.h
index 6ddd8a3..e355626 100644
--- a/kernels/volk/volk_32fc_index_min_16u.h
+++ b/kernels/volk/volk_32fc_index_min_16u.h
@@ -87,7 +87,7 @@
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_16u_a_avx2_variant_0(uint16_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
@@ -147,7 +147,7 @@ static inline void volk_32fc_index_min_16u_a_avx2_variant_0(uint16_t* target,
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_16u_a_avx2_variant_1(uint16_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
@@ -207,7 +207,7 @@ static inline void volk_32fc_index_min_16u_a_avx2_variant_1(uint16_t* target,
 #include <xmmintrin.h>
 
 static inline void
-volk_32fc_index_min_16u_a_sse3(uint16_t* target, lv_32fc_t* source, uint32_t num_points)
+volk_32fc_index_min_16u_a_sse3(uint16_t* target, const lv_32fc_t* source, uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
 
@@ -320,7 +320,7 @@ volk_32fc_index_min_16u_a_sse3(uint16_t* target, lv_32fc_t* source, uint32_t num
 
 #ifdef LV_HAVE_GENERIC
 static inline void
-volk_32fc_index_min_16u_generic(uint16_t* target, lv_32fc_t* source, uint32_t num_points)
+volk_32fc_index_min_16u_generic(uint16_t* target, const lv_32fc_t* source, uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
 
@@ -358,7 +358,7 @@ volk_32fc_index_min_16u_generic(uint16_t* target, lv_32fc_t* source, uint32_t nu
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_16u_u_avx2_variant_0(uint16_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
@@ -418,7 +418,7 @@ static inline void volk_32fc_index_min_16u_u_avx2_variant_0(uint16_t* target,
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_16u_u_avx2_variant_1(uint16_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     num_points = (num_points > USHRT_MAX) ? USHRT_MAX : num_points;
diff --git a/kernels/volk/volk_32fc_index_min_32u.h b/kernels/volk/volk_32fc_index_min_32u.h
index d5e2a00..72fb040 100644
--- a/kernels/volk/volk_32fc_index_min_32u.h
+++ b/kernels/volk/volk_32fc_index_min_32u.h
@@ -80,7 +80,7 @@
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_32u_a_avx2_variant_0(uint32_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     const __m256i indices_increment = _mm256_set1_epi32(8);
@@ -138,7 +138,7 @@ static inline void volk_32fc_index_min_32u_a_avx2_variant_0(uint32_t* target,
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_32u_a_avx2_variant_1(uint32_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     const __m256i indices_increment = _mm256_set1_epi32(8);
@@ -196,7 +196,7 @@ static inline void volk_32fc_index_min_32u_a_avx2_variant_1(uint32_t* target,
 #include <xmmintrin.h>
 
 static inline void
-volk_32fc_index_min_32u_a_sse3(uint32_t* target, lv_32fc_t* source, uint32_t num_points)
+volk_32fc_index_min_32u_a_sse3(uint32_t* target, const lv_32fc_t* source, uint32_t num_points)
 {
     union bit128 holderf;
     union bit128 holderi;
@@ -307,7 +307,7 @@ volk_32fc_index_min_32u_a_sse3(uint32_t* target, lv_32fc_t* source, uint32_t num
 
 #ifdef LV_HAVE_GENERIC
 static inline void
-volk_32fc_index_min_32u_generic(uint32_t* target, lv_32fc_t* source, uint32_t num_points)
+volk_32fc_index_min_32u_generic(uint32_t* target, const lv_32fc_t* source, uint32_t num_points)
 {
     float sq_dist = 0.0;
     float min = FLT_MAX;
@@ -342,7 +342,7 @@ volk_32fc_index_min_32u_generic(uint32_t* target, lv_32fc_t* source, uint32_t nu
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_32u_u_avx2_variant_0(uint32_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     const __m256i indices_increment = _mm256_set1_epi32(8);
@@ -400,7 +400,7 @@ static inline void volk_32fc_index_min_32u_u_avx2_variant_0(uint32_t* target,
 #include <volk/volk_avx2_intrinsics.h>
 
 static inline void volk_32fc_index_min_32u_u_avx2_variant_1(uint32_t* target,
-                                                            lv_32fc_t* source,
+                                                            const lv_32fc_t* source,
                                                             uint32_t num_points)
 {
     const __m256i indices_increment = _mm256_set1_epi32(8);
@@ -458,7 +458,7 @@ static inline void volk_32fc_index_min_32u_u_avx2_variant_1(uint32_t* target,
 #include <volk/volk_neon_intrinsics.h>
 
 static inline void
-volk_32fc_index_min_32u_neon(uint32_t* target, lv_32fc_t* source, uint32_t num_points)
+volk_32fc_index_min_32u_neon(uint32_t* target, const lv_32fc_t* source, uint32_t num_points)
 {
     const uint32_t quarter_points = num_points / 4;
     const lv_32fc_t* sourcePtr = source;
-- 
2.30.2

